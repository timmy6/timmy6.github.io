<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2022-05-11T03:22:40.468Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>John Doe</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>你好，Go语言</title>
    <link href="http://example.com/2018/09/11/hello-wrold/"/>
    <id>http://example.com/2018/09/11/hello-wrold/</id>
    <published>2018-09-11T03:07:50.000Z</published>
    <updated>2022-05-11T03:22:40.468Z</updated>
    
    <content type="html"><![CDATA[<h2 id="你好，Go语言"><a href="#你好，Go语言" class="headerlink" title="你好，Go语言"></a>你好，Go语言</h2><blockquote><p>Go 是一个开源的编程语言，它能让构造简单、可靠且高效的软件变得容易。</p></blockquote><p>因工作需要，准备入坑，先从环境安装开始，输出一个 Hello World。</p><h2 id="环境安装"><a href="#环境安装" class="headerlink" title="环境安装"></a>环境安装</h2><p><strong>目标</strong></p><p>安装完成并运行 Hello World 成功！</p><p>本机系统：macOS High Sierra 10.13.4</p><p>Go 版本：1.12</p><p><strong>方式一：</strong></p><p>通过 brew 安装</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install go</span><br></pre></td></tr></table></figure><p>根据提示进行安装吧，我使用的 方式二 进行安装的。</p><p><strong>方式二：</strong></p><p>通过安装包安装</p><p>地址：<a href="https://dl.google.com/go/go1.12.darwin-amd64.pkg">https://dl.google.com/go/go1.12.darwin-amd64.pkg</a></p><p>下载之后直接点击安装，一步步继续即可。</p><p><strong>配置环境变量</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">vi ~/.bashrc</span><br><span class="line"></span><br><span class="line">//新增</span><br><span class="line">export GOROOT=/usr/local/go</span><br><span class="line">export GOPATH=/Users/username/go/code //代码目录，自定义即可</span><br><span class="line">export PATH=$PATH:$GOPATH/bin</span><br></pre></td></tr></table></figure><p>及时生效，请执行命令：source ~&#x2F;.bashrc</p><p><strong>如果命令行使用的是zsh，请修改 .zshrc 文件。</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">vi ~/.zshrc</span><br><span class="line"></span><br><span class="line">//新增</span><br><span class="line">export GOROOT=/usr/local/go</span><br><span class="line">export GOPATH=/Users/username/go/code //自定义代码目录</span><br><span class="line">export PATH=$PATH:$GOPATH/bin</span><br></pre></td></tr></table></figure><p>及时生效，请执行命令：source ~&#x2F;.zshrc</p><p>验证是否安装成功，命令行下执行：</p><p><img src="https://github.com/xinliangnote/Go/blob/master/00-%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/images/01-%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85/1_go_1.png"></p><h2 id="目录结构"><a href="#目录结构" class="headerlink" title="目录结构"></a>目录结构</h2><p><strong>bin</strong></p><p>存放编译后可执行的文件。</p><p><strong>pkg</strong></p><p>存放编译后的应用包。</p><p><strong>src</strong></p><p>存放应用源代码。</p><p>例如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">├─ code  -- 代码根目录</span><br><span class="line">│  ├─ bin</span><br><span class="line">│  ├─ pkg</span><br><span class="line">│  ├─ src</span><br><span class="line">│     ├── hello</span><br><span class="line">│         ├── hello.go</span><br></pre></td></tr></table></figure><p><strong>Hello World 代码</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">//在 hello 目录下创建 hello.go</span><br><span class="line"></span><br><span class="line">package main</span><br><span class="line"></span><br><span class="line">import (</span><br><span class="line">&quot;fmt&quot;</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">func main() &#123;</span><br><span class="line">fmt.Println(&quot;Hello World!&quot;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>命令行执行：</p><p><img src="https://github.com/xinliangnote/Go/blob/master/00-%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/images/01-%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85/1_go_2.png"></p><h2 id="命令"><a href="#命令" class="headerlink" title="命令"></a>命令</h2><p>查看完整的命令：</p><p><img src="https://github.com/xinliangnote/Go/blob/master/00-%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/images/01-%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85/1_go_3.png"></p><p><strong>go build hello</strong></p><p>在src目录或hello目录下执行 go build hello，只在对应当前目录下生成文件。</p><p><strong>go install hello</strong></p><p>在src目录或hello目录下执行 go install hello，会把编译好的结果移动到 $GOPATH&#x2F;bin。</p><p><strong>go run hello</strong></p><p>在src目录或hello目录下执行 go run hello，不生成任何文件只运行程序。</p><p><strong>go fmt hello</strong></p><p>在src目录或hello目录下执行 go run hello，格式化代码，将代码修改成标准格式。</p><p>其他命令，需要的时候再进行研究吧。</p><h2 id="开发工具"><a href="#开发工具" class="headerlink" title="开发工具"></a>开发工具</h2><p><strong>GoLand</strong></p><p><img src="https://github.com/xinliangnote/Go/blob/master/00-%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/images/01-%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85/1_go_4.png"></p><p>GoLand 是 JetBrains 公司推出的 Go 语言集成开发环境，与我们用的 WebStorm、PhpStorm、PyCharm 是一家，同样支持 Windows、Linux、macOS 等操作系统。</p><p>下载地址：<a href="https://www.jetbrains.com/go/">https://www.jetbrains.com/go/</a></p><p>软件是付费的，不过想想办法，软件可以永久激活的。</p><h2 id="学习网址"><a href="#学习网址" class="headerlink" title="学习网址"></a>学习网址</h2><ul><li>Go语言：<a href="https://golang.org/">https://golang.org/</a></li><li>Go语言中文网：<a href="https://studygolang.com/">https://studygolang.com/</a></li><li>Go语言包管理：<a href="https://gopm.io/">https://gopm.io/</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;你好，Go语言&quot;&gt;&lt;a href=&quot;#你好，Go语言&quot; class=&quot;headerlink&quot; title=&quot;你好，Go语言&quot;&gt;&lt;/a&gt;你好，Go语言&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;Go 是一个开源的编程语言，它能让构造简单、可靠且高效的软件变得容易。&lt;/</summary>
      
    
    
    
    <category term="Go开发" scheme="http://example.com/categories/Go%E5%BC%80%E5%8F%91/"/>
    
    
    <category term="程序员" scheme="http://example.com/tags/%E7%A8%8B%E5%BA%8F%E5%91%98/"/>
    
  </entry>
  
  <entry>
    <title>变量声明</title>
    <link href="http://example.com/2018/05/11/var_dec/"/>
    <id>http://example.com/2018/05/11/var_dec/</id>
    <published>2018-05-11T03:11:38.000Z</published>
    <updated>2022-05-11T03:17:32.142Z</updated>
    
    <content type="html"><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>在声明变量之前，咱们先了解下变量的数据类型，这篇文章主要涉及 字符串、布尔、数字，其他类型后面开篇再说。</p><h2 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h2><h4 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h4><p><code>string</code></p><p>只能用一对双引号（””）或反引号（&#96;&#96;）括起来定义，不能用单引号（’’）定义！</p><h4 id="布尔"><a href="#布尔" class="headerlink" title="布尔"></a>布尔</h4><p><code>bool</code></p><p>只有 true 和 false，默认为 false。</p><h4 id="数字"><a href="#数字" class="headerlink" title="数字"></a>数字</h4><p><strong>整型</strong></p><p><code>int8</code> <code>uint8</code> </p><p><code>int16</code> <code>uint16</code></p><p><code>int32</code> <code>uint32</code></p><p><code>int64</code> <code>uint64</code></p><p><code>int</code> <code>uint</code>，具体长度取决于 CPU 位数。</p><p><strong>浮点型</strong></p><p><code>float32</code> <code>float64</code></p><h2 id="常量声明"><a href="#常量声明" class="headerlink" title="常量声明"></a>常量声明</h2><p><strong>常量</strong>，在程序编译阶段就确定下来的值，而程序在运行时无法改变该值。</p><p><strong>单个常量声明</strong></p><p>第一种：const 变量名称 数据类型 &#x3D; 变量值</p><p>如果不赋值，使用的是该数据类型的默认值。</p><p>第二种：const 变量名称 &#x3D; 变量值</p><p>根据变量值，自行判断数据类型。</p><p><strong>多个常量声明</strong></p><p>第一种：const 变量名称,变量名称 … ,数据类型 &#x3D; 变量值,变量值 …</p><p>第二种：const 变量名称,变量名称 …  &#x3D; 变量值,变量值 …</p><p><strong>测试代码</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">//demo_1.go</span><br><span class="line">package main</span><br><span class="line"></span><br><span class="line">import (</span><br><span class="line">&quot;fmt&quot;</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">func main() &#123;</span><br><span class="line">const name string = &quot;Tom&quot;</span><br><span class="line">fmt.Println(name)</span><br><span class="line"></span><br><span class="line">const age = 30</span><br><span class="line">fmt.Println(age)</span><br><span class="line"></span><br><span class="line">const name_1, name_2 string = &quot;Tom&quot;, &quot;Jay&quot;</span><br><span class="line">fmt.Println(name_1, name_2)</span><br><span class="line"></span><br><span class="line">const name_3, age_1 = &quot;Tom&quot;, 30</span><br><span class="line">fmt.Println(name_3, age_1)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果：</p><p><img src="https://github.com/xinliangnote/Go/blob/master/00-%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/images/02-%E5%8F%98%E9%87%8F%E5%A3%B0%E6%98%8E/2_go_1.png"></p><h2 id="变量声明"><a href="#变量声明" class="headerlink" title="变量声明"></a>变量声明</h2><p><strong>单个变量声明</strong></p><p>第一种：var 变量名称 数据类型 &#x3D; 变量值</p><p>如果不赋值，使用的是该数据类型的默认值。</p><p>第二种：var 变量名称 &#x3D; 变量值</p><p>根据变量值，自行判断数据类型。</p><p>第三种：变量名称 :&#x3D; 变量值</p><p>省略了 var 和数据类型，变量名称一定要是未声明过的。</p><p><strong>多个变量声明</strong></p><p>第一种：var 变量名称,变量名称 … ,数据类型 &#x3D; 变量值,变量值 …</p><p>第二种：var 变量名称,变量名称 …  &#x3D; 变量值,变量值 …</p><p>第三种：变量名称,变量名称 … :&#x3D; 变量值,变量值 …</p><p><strong>测试代码</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">//demo_2.go</span><br><span class="line">package main</span><br><span class="line"></span><br><span class="line">import (</span><br><span class="line">&quot;fmt&quot;</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">func main() &#123;</span><br><span class="line">var age_1 uint8 = 31</span><br><span class="line">var age_2 = 32</span><br><span class="line">age_3 := 33</span><br><span class="line">fmt.Println(age_1, age_2, age_3)</span><br><span class="line"></span><br><span class="line">var age_4, age_5, age_6 int = 31, 32, 33</span><br><span class="line">fmt.Println(age_4, age_5, age_6)</span><br><span class="line"></span><br><span class="line">var name_1, age_7 = &quot;Tom&quot;, 30</span><br><span class="line">fmt.Println(name_1, age_7)</span><br><span class="line"></span><br><span class="line">name_2, is_boy, height := &quot;Jay&quot;, true, 180.66</span><br><span class="line">fmt.Println(name_2, is_boy, height)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果：</p><p><img src="https://github.com/xinliangnote/Go/blob/master/00-%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/images/02-%E5%8F%98%E9%87%8F%E5%A3%B0%E6%98%8E/2_go_2.png"></p><h2 id="输出方法"><a href="#输出方法" class="headerlink" title="输出方法"></a>输出方法</h2><p><strong>fmt.Print</strong>：输出到控制台（仅只是输出）</p><p><strong>fmt.Println</strong>：输出到控制台并换行</p><p><strong>fmt.Printf</strong>：仅输出格式化的字符串和字符串变量（整型和整型变量不可以）</p><p><strong>fmt.Sprintf</strong>：格式化并返回一个字符串，不输出。</p><p>测试代码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">//demo_3.go</span><br><span class="line">package main</span><br><span class="line"></span><br><span class="line">import (</span><br><span class="line">&quot;fmt&quot;</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">func main() &#123;</span><br><span class="line">fmt.Print(&quot;输出到控制台不换行&quot;)</span><br><span class="line">fmt.Println(&quot;---&quot;)</span><br><span class="line">fmt.Println(&quot;输出到控制台并换行&quot;)</span><br><span class="line">fmt.Printf(&quot;name=%s,age=%d\n&quot;, &quot;Tom&quot;, 30)</span><br><span class="line">fmt.Printf(&quot;name=%s,age=%d,height=%v\n&quot;, &quot;Tom&quot;, 30, fmt.Sprintf(&quot;%.2f&quot;, 180.567))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果：</p><p><img src="https://github.com/xinliangnote/Go/blob/master/00-%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/images/02-%E5%8F%98%E9%87%8F%E5%A3%B0%E6%98%8E/2_go_3.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h2&gt;&lt;p&gt;在声明变量之前，咱们先了解下变量的数据类型，这篇文章主要涉及 字符串、布尔、数字，其他类型后面开篇再说。&lt;/p&gt;
&lt;h2 id=&quot;数据类型&quot;</summary>
      
    
    
    
    <category term="Go开发" scheme="http://example.com/categories/Go%E5%BC%80%E5%8F%91/"/>
    
    
  </entry>
  
</feed>
